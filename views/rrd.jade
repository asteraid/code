extends layouts/extensions

block content
	include includes/header-nav
	
	include includes/sidebar
	#content
		include includes/content-header
		.container-fluid
			.row-fluid
				.span12
					.widget-box
						.widget-title
							span.icon
								i.icon-signal
							h5 System Information
						.widget-content.center
							.row-fluid
								.span9
									.flot-items(style="padding-bottom: 30px;")
									div(style="border-top: 1px #d6d6d6 solid; text-align: center; padding-top: 10px;")
										.easy-pie-items
								.span3
									ul.chart-values
	include includes/footer
	script(type="text/javascript", src="/js/flot/jquery.flot.js")
	script(type="text/javascript", src="/js/flot/jquery.flot.navigate.js")
	script(type="text/javascript", src="/js/flot/jquery.flot.time.js")
	script(type="text/javascript", src="/js/flot/jquery.flot.resize.js")
	script(type="text/javascript", src="/js/flot/jquery.flot.navigationControl.js")
	script(type="text/javascript", src="/js/easypiechart/jquery.easypiechart.js")
	link(rel="stylesheet", href="/js/flot/css/iconfontsFico.css" )
	style
		.blink {margin: auto 3px;}
		.clicking {cursor: pointer;}
		.chart-values li {margin: 10px auto;}
		.chart-value {font-weight: bold;}
		.chart-line {width: 100%; height: 300px;}
		.easy-pie-item {display: inline-block; text-align: center; margin: 0 10px;}
			.easy-pie-item .easy-pie-chart {line-height: 110px; width: 110px; height: 110px;}
			.easy-pie-item span {width: 110px; text-align: center; position: absolute;}
			div.xAxis div.tickLabel {    
				transform: rotate(-60deg);
				-ms-transform:rotate(-60deg); /* IE 9 */
				-moz-transform:rotate(-60deg); /* Firefox */
				-webkit-transform:rotate(-60deg); /* Safari and Chrome */
				-o-transform:rotate(-60deg); /* Opera */
				/*rotation-point:60% 40%;*/ /* CSS3 */
				/*rotation:270deg;*/ /* CSS3 */
			}

	script
		var charts = getListChart();
		var chartMain;
		var chartsPie = [];
		var chartsLine = [];
		var chartsValue = [];
		var plot;
		var scale;
		var options = {
						legend: { show: true, position: "ne" },
						grid: {
							show: true,
							aboveData: true,
							color:'#3f3f3f',
							labelMargin: 15,
							axisMargin: 0, 
							borderWidth: 0,
							borderColor:null,
							minBorderMargin: 0,
							clickable: true, 
							hoverable: true,
							autoHighlight: true,
							mouseActiveRadius: 20
						},
						series: {
							grow: {active:false},
							lines: {
								show: true,
								fill: true,
								lineWidth: 2,
								steps: false
								},
							points: {
								show:true,
								radius: 4,
								symbol: "circle",
								fill: true,
								borderColor: "#fff"
							}
						},
						xaxis: {mode: "time", timeformat: "%d.%m %h:%M"},
						yaxis: {min: 0},
						zoom: {
							interactive: true
						},
						pan: {
							interactive: true
						},
						navigationControl: {
							position: { left: "30px", top: "20px" },
							display: "block"
						},
						colors: ["#AFD8F5"]
					};

		$.each(charts, function(index, chart) {
			if (chart.main) chartMain = chart.name;
			
			switch (chart.type) {
				case 'pie':
					chartsPie.push(chart.name);
					var html = $('<div class="easy-pie-item clicking"><div id="pie-' + chart.name + '" class="easy-pie-chart" data-percent="0"><span>0%</span></div><label>' + chart.label + '</label></div>').bind('click', function() {updateChartMain(chart.name);});
					$('.easy-pie-items').append(html);
				break;
				
				case 'value':
					chartsValue.push(chart.name);
					var html = $('<li id="value-' + chart.name + '" class="clicking" style="display: block;"><button class="btn btn-large span12" style="margin-bottom: 10px;"><span>' + chart.label + '</span>: <span class="chart-value" chart-format="' + chart.format + '"></span></button></li>').bind('click', function() {updateChartMain(chart.name);});
					$('.chart-values').append(html);
				break;			
			}
		});

		$('.flot-items').append('<div param-name="' + chartMain + '" class="chart-line" id="flot"></div>');

		$('.easy-pie-chart').easyPieChart({
			animate: 1000,
			onStep: function(from, to, currentValue) {
				$(this.el).find('span').html(~~currentValue + '%');
			},
			lineWidth: 7,
			scaleColor: '#aaa',
			trackColor: '#eee'
		});
		
		updatePieCharts();
		updateValueCharts();
		updateChartMain();
		
		function updatePieCharts() {
			var data = getDataCharts('pie', chartsPie);
			$.each(data, function(index, value) {
				var color	= '#FF3300';
				
				if (value < 70) color = '#009900';
				else if (value > 70 && value < 90) color = '#FFFF33';
				
				$('#pie-' + index).data('easyPieChart').update(value);
				$('#pie-' + index).data('easyPieChart').options['barColor'] = color;
			});
		}
		
		function updateChartMain(param) {
			if (plot) {
				var opt		= plot.getOptions();
				var axes	= plot.getAxes();

				//zoom, zoomOut, change position chart -> not update
				if (!
					(
						(opt.dxaxis.max === axes.xaxis.max) && (opt.dxaxis.min === axes.xaxis.min) && 
						(opt.dyaxis.max === axes.yaxis.max) && (opt.dyaxis.min === axes.yaxis.min)
					)
				) return false;
			}
		
			var flot_id = '#flot';
			
			if (!param) param = chartMain;
			
			var chartInfo	= getChartInfo(param);
			var data		= getDataInterval(param);
			
			$.each(data, function(index, value) {
				if (plot) plot.destroy();
				
				$(flot_id).attr('param-name', param);
				plot = $.plot(flot_id, [{label: chartInfo.label, data: value}], options);

				//add options params for goHome button on FlotControl
				plot.getOptions().dxaxis = { min: plot.getAxes().xaxis.min, max: plot.getAxes().xaxis.max };
				plot.getOptions().dyaxis = { min: plot.getAxes().yaxis.min, max: plot.getAxes().yaxis.max};
			});
			
			chartMain = param;
		}
		
		function updateValueCharts() {
			var data = getDataCharts('value', chartsValue);
			$.each(data, function(index, value) {
				var html	= '';
				var obj		= $('#value-' + index + ' .chart-value');
				var format	= obj.attr('chart-format');

				switch(format) {
					case 'time':
						var time = convertSeconds(value);
						html = [time.d, 'd<span class="blink">:</span>', time.h, 'h<span class="blink">:</span>', time.m, 'm'].join('');						
					break;
					case 'nubmer':
					default:
						html = value;
					break;
				}
				
				obj.html(html);
			});
			
			blink('.blink');
		}
		
		function getChartInfo(name) {
			var response = {};
			
			$.each(charts, function(index, data) {
				if (data.name === name)
					response = data;
			});
			
			return response;
		}
		
		function blink(selector) {
			$(selector).fadeOut('slow',function() {
				$(this).fadeIn('slow',function() {
					blink(this);
				});
			});
		}
		
		setInterval(updatePieCharts, 20000);
		setInterval(updateValueCharts, 20000);
		setInterval(updateChartMain, 20000);
		
		function getListChart() {
			var response = '';			
			$.ajax({
				type: 'GET',
				url: '/data/rrd/list',
				dataType: 'json',
				async: false,
				success: function(data) {
					if(data.success)
						response = data.rows;
				}
			});
			
			return response;
		}
		
		function getDataInterval(param) {
			var response = 0;
			$.ajax({
				type: "GET",
				url: '/data/rrd/get_data_interval',
				data: {param: param},
				dataType: "json",
				async: false,
				success: function(data) {
					if (data.success)
						response = data.result;
				}
			});
			
			return response;
		}
		
		function getDataCharts(type, params) {
			var response = 0;
			$.ajax({
				type: "GET",
				url: '/data/rrd/data_item',
				data: {params: params},
				dataType: "json",
				async: false,
				success: function(data) {
					if (data.success)
						response = data.result;
				}
			});
			
			return response;
		}
		
		function convertSeconds(s) {
			var d, h, m;
			m = Math.floor(s / 60);
			s = s % 60;
			h = Math.floor(m / 60);
			m = m % 60;
			d = Math.floor(h / 24);
			h = h % 24;
			return { d: d, h: h, m: m, s: s };
		};