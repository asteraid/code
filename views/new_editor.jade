extends layouts/editor

block content
    include includes/header-nav
    
    include includes/sidebar

    style
      #style-switcher {
        top: 135px;
        height: auto;
        background: #3a3a3a;
      }
      #style-switcher a {
        display: block;
        width: auto;
        height: auto;
        margin-top: 0px;
        border-style: solid;
        border-width: 1px;
        border-color: transparent;
      }
      #style-switcher li a {
        color: #aaa;
      }
      
      #style-switcher li.active a {
        color: #fff;
      }
      #style-switcher li a:hover {
        color: #333;
      }
    #style-switcher
      i.icon-arrow-left.icon-white(style="margin: 10px 5px;")

      #editor_tabs(style="padding-left: 30px;overflow: auto;height: 500px;")
        ul#main-tabs.nav.nav-pills.nav-stacked

    #content
        include includes/content-header
        .container-fluid
            .row-fluid
                .span12(style="padding-right: 10px; padding-top: 5px;")
                  #main-tabs-content.tab-content
            

                        
    include includes/footer

    script( src="/js/modal/ace/ace.js", type="text/javascript", charset="utf-8")
    script( src="/js/modal/ace/mode-ini.js", type="text/javascript", charset="utf-8")
    script
        var contexts_id = [];

        $(document).ready(function(){
            $.ajax({
                type: 'GET',
                url: '/data/editor/list_configs',
                dataType: 'json',
                async: false,
                success: function(data) {
                    if(data.success) {
                        var main_tabs_li = '';
                        var main_tabs_content = '';

                        $.each(data.configs, function(index, el) {
                            main_tabs_li = '<li><a href="#tab_'+index+'" data-toggle="tab" tab-number="' + index + '">' + el + '</a></li>';
                            main_tabs_content = '<div class="tab-pane" id="tab_' + index + '"></div>';
                            $('#main-tabs').append(main_tabs_li);
                            $('#main-tabs-content').append(main_tabs_content);
                        });

                        $('#main-tabs a[href*="#tab"]').click(function() {
                            var tab_number = $(this).attr('tab-number');
                            if(!$('#tab_' + tab_number + ' div').hasClass('tabbable'))
                                loadPageConfigs(tab_number);
                            
                            var breadcrumb = '#breadcrumb';
                            if ($(breadcrumb).find('a:last').html() != 'Editor') {
                              $(breadcrumb).find('a:last').remove();
                            }
                            $(breadcrumb).append('<a href="#" class="current">' + $(this).html() + '</a>');
                        });

                        //active 0 tab by default
                        $('a[href="#tab_0"]').click();
                        $('#style-switcher i').click();
                    }
                }
            });
        });
        function loadConfig(editor_id, config_name, node_name) {
            $.ajax({
                type: 'GET',
                url: '/data/editor/get_config',
                data: {config_name: config_name},
                dataType: 'json',
                async: false,
                success: function(data) {
                    if(data.success) {
                        var editor = ace.edit(editor_id);
                        editor.getSession().setValue(data.content[node_name].replace(/same/g, '  same'));
                        editor.clearSelection();
                        editor.gotoLine(1);
                    }
                }
            });
        }

        function loadPageConfigs(num) {

            var tab_name = $('a[tab-number=' + num + ']').html();
            var JavaScriptMode = require("ace/mode/ini").Mode;
    
            $.ajax({
                type: 'GET',
                url: '/data/editor/get_config',
                data: {config_name: tab_name},
                dataType: 'json',
                async: false,
                success: function(data) {
                    if(data.success) {
                        var tabs            = '',
                            content         = '',
                            buttons         = '',
                            btn_refresh     = '',
                            btn_save        = '',
                            node_name       = '',
                            value_editor    = '',
                            nodes           = ['ALL'];

                        //get nodes
                        $.ajax({
                            type: 'GET',
                            url: '/data/exec/get_serverList',
                            data: {type: 'short'},
                            dataType: 'json',
                            async: false,
                            success: function(result) {
                                if(result.success) {
                                    $.each(result.rows, function(index, el) {
                                        nodes.push(el.name);
                                    });
                                }
                            }
                        });

                        //40px - height servers tabs
                        var editor_height = $('#content').height() - $('#content-header').height() - $('#breadcrumb').height() - $('#main-tabs').height() - 40;
                        editor_height = $('#content').height() - $('#content-header').height() - $('#breadcrumb').height() - 10;
                        //editor_height = $('#main-tabs').height() - 100;

                        tabs = '<li style="padding-top: 5px;margin-right: 5px;"><button class="btn btn-small"><i class="icon-refresh"></i></button></li><li style="padding-top: 5px;margin-right: 5px;"><button class="btn btn-small"><i class="icon-ok"></i></button></li>';
                        $.each(nodes, function(index, el) {
                            tabs    += '<li><a data-toggle="tab" href="#editor_' + num + '_' + el + '">' + el + '</a></li>';
                            content += '<div class="tab-pane" node-name="' + el + '" config-name="' + tab_name + '" id="editor_' + num + '_' + el +'" style="margin-top:10px; height: ' + editor_height + 'px;"></div>';
                        });

                        tabs        = '<ul class="nav nav-tabs" style="margin-bottom: 0px;">' + tabs + '</ul>';
                        content     = '<div class="tab-content">' + content + '</div>';
                        buttons = '<button data-action="refresh" class="btn btn-mini btn-primary"><i class="icon-refresh icon-white"></i> Refresh</button>&nbsp;';
                        
                        switch(tab_name) {
                            case 'extensions-autogenerated.conf':
                            case 'extensions.conf':
                            case 'sip.conf':
                            case 'ooh323.conf':
                            case 'iax.conf':
                            break;
                            default:
                                buttons += '<button data-action="save" class="btn btn-mini btn-success"><i class="icon-ok icon-white"></i> Save</button>';
                        }
                        buttons = '';
                        $('#tab_' + num).html('<div class="tabbable tabs-nav">' + tabs + buttons + content + '</div>');
                        $('a[href="#editor_' + num + '_ALL' + '"]').click();

                        var editors = $('div[id*="editor_' + num + '_"]');
                        $.each(editors, function(index, el) {
                            var editor = ace.edit(el);
                            editor.setTheme("ace/theme/tomorrow_night_bright");
                            editor.getSession().setMode(new JavaScriptMode());

                            node_name = $(el).attr('node-name');

                            if(data.content[node_name]) {
                                value_editor = data.content[node_name].replace(/same/g, '  same');
                                editor.setValue(value_editor);
                            }

                            editor.clearSelection();
                            editor.gotoLine(1);
                        });

                        $('button[data-action="refresh"]')
                            .unbind('click')
                            .bind('click', function() {
                                var current_container   = $(this).siblings('.tab-content').find('div[id*="editor_"]:visible');
                                var current_config_name = $(current_container[0]).attr('config-name');
                                var current_node_name   = $(current_container[0]).attr('node-name');
                                var editor_id           = $(current_container[0]).attr('id');
                                loadConfig(editor_id, current_config_name, current_node_name);
                            });

                        $('button[data-action="save"]')
                            .unbind('click')
                            .bind('click', function() {
                                //find visible content
                                var deleted             = 0;
                                var current_container   = $(this).siblings('.tab-content').find('div[id*="editor_"]:visible');
                                var current_config_name = $(current_container[0]).attr('config-name');
                                var current_node_name   = $(current_container[0]).attr('node-name');
                                var editor_id           = $(current_container[0]).attr('id');
                                var current_editor      = ace.edit(current_container[0]);

                                if(tab_name == 'extensions-custom.conf') {
                                    var current_containers      = $(this).siblings('.tab-content').find('div[id*="editor_"]');
                                    var content_all_servers     = '';
                                    $.each(current_containers, function(index, el) {
                                        content_all_servers += ace.edit(el).getSession().getValue();
                                    });

                                    deleted = getDeletedContexts(content_all_servers);
                                }

                                $.ajax({
                                    type: 'GET',
                                    url: '/data/editor/save_config',
                                    data: {
                                        config_content: prep_data2db(current_config_name, current_editor, current_node_name),
                                        config_name: current_config_name,
                                        deleted: deleted,
                                        node: current_node_name
                                    },
                                    dataType: 'json',
                                    async: false,
                                    success: function(data) {
                                        if(data.success) {
                                            loadConfig(editor_id, current_config_name, current_node_name);
                                        }
                                        showDialog('Editor',data.message, 300, 'auto');
                                        changeBtnApply(1);
                                    }
                                });


                            });

                    }
                }
            });
        }
        
        function getDeletedContexts(editor) {
            //var content             = editor.getValue().split('\n');
            var content             = editor.split('\n');
            var context_regex       = /^\[(.+)\]$/;

            //копирование по значению
            var contexts_id_deleted = contexts_id.slice(0);

            content.forEach(function(row) {
                var matched_context = row.match(context_regex);
                if(matched_context) {
                    for(i=0; i<contexts_id_deleted.length; i++) {
                        if(contexts_id_deleted[i].name == matched_context[1])
                            contexts_id_deleted.splice(i, 1);
                    }
                }
            });

            var deleted = [];
            if(contexts_id_deleted.length > 0) {
                contexts_id_deleted.forEach(function(row) {
                    deleted.push(row.id);
                });
            }

            return deleted.join();
        }


        function load_config(config,config_editor,position){
            if(position == 'start') $('#content').mask(opts);

            $.ajax({
                type: 'GET',
                url: '/data/editor/get_config',
                data: {config_name: config},
                dataType: 'json',
                success: function(data) {
                    if(data.success) {
                        config_editor.setValue(data.config_content.replace(/same/g, '  same'));

                        if(data.config_name == 'extensions-custom.conf')
                            contexts_id = data.contexts_id;

                        config_editor.on('changeSession',function(e){
                            config_editor.gotoLine(1);
                        });
                        //onchange editor
                        config_editor.on("change",function(e) {
                            if($('#editor_tabs li.active a').html().indexOf('*') == -1)
                                $('#editor_tabs li.active a').append(' *');
                        });
                        config_editor.clearSelection();                
                    }
                    else
                        showDialog('Editor',data.message,300,'auto');

                    if(position == 'end') $('#content').unmask();
                }
            });
        }
        
        function prep_data2db(config, editor, node) {
                //var data = editor.getValue().replace(/"/g,'\\"');
                var data = editor.getValue().replace(/'/g,'"');
                data = data.split('\n');
                //var exten_regex = /exten|same|include/;
                //var filler_regex = /={4,}|^$/;
                var context_regex = /^\[(.+)\]$/;
                var good_row_regex = /^\s*(\w+)\s*(?:=>|=)\s*(.+)$/;
                //var comment_regex = /^;$/;
                var last_context    = '';
                var cat_metric        = 0;
                var var_metric        = -1;
                var insert_row        = '';
                var result            = '';
                config = config.replace('-custom', '');

                data.forEach(function(row) {
                    row = $.trim(row);
                    //var matched_exten            = row.match(exten_regex);
                    var matched_context            = row.match(context_regex);
                    //var matched_comment            = row.match(comment_regex);
                    var matched_good_row_regex    = row.match(good_row_regex);

                    if(matched_good_row_regex) {
                        var_metric++;
                        var splited_row = row.split('=>');
                        
                        insert_row                  = {};
                        insert_row['config_name']   = config;
                        insert_row['category']      = last_context;
                        insert_row['var_name']      = matched_good_row_regex[1];
                        insert_row['var_val']       = matched_good_row_regex[2];
                        insert_row['cat_metric']    = cat_metric;
                        insert_row['var_metric']    = var_metric;
                        insert_row['node']          = node;
                        
                        if(insert_row.hasOwnProperty("category"))
                            result += "('" + insert_row['config_name'] + "', 0, 0,'" +  insert_row['category'] + "', '" + insert_row['var_name'] + "', '" + insert_row['var_val'] + "', " + insert_row['cat_metric'] + ", " + insert_row['var_metric'] + ", '" + insert_row['node'] + "'),";
                    } else {
                        if(matched_context) {
                            last_context = matched_context[1];
                            var_metric = -1;
                            cat_metric++

                            if(config.replace('-custom', '') == 'extensions.conf')
                                $.ajax({
                                    type: 'GET',
                                    url: '/data/editor/get_context_id',
                                    data: {context_name: last_context, config_name: config},
                                    dataType: 'json',
                                    async: false,
                                    success: function(data) {
                                        if (data.success)
                                          cat_metric = data.id;
                                    }
                                });
                        }
                        
                    }
                });

                return result.substring(0, result.length-1); 
        }
