
extends ../layout

block content

    div.widget-box(style='min-width: 500px; margin-bottom: 0; margin-top: 0;')
        form#form-main.form-horizontal(action='#', method='POST', enctype="multipart/form-data")
            .control-group
                label.control-label(for='id') ID:
                .controls
                    input#id(type='text', name='id', readonly, value=req_params.id)
            .control-group
                label.control-label(for='user_id') User:
                .controls
                    input#user_id.input-select2(type='text', name='user_id', style='width: 82%;')
            .control-group
                label.control-label(for='token') Token:
                .controls.left
                    input#token(type='text', name='token')
                    a#btnGenerateToken.btn
                        i.icon.icon-refresh
                        span &nbsp;Generate
            .control-group
                label.control-label(for='begin_date') Start:
                .controls
                    input#begin_date.datepicker(type='text', name='begin_date', data-date-format='dd.mm.yyyy')
            .control-group
                label.control-label(for='end_date') Expiration:
                .controls
                    input#end_date.datepicker(type='text', name='end_date', data-date-format='dd.mm.yyyy')
            .control-group
                label.control-label(for='active') Active:
                .controls
                    input#active.input-select2(type='text', name='active', style='width: 82%;')
            .control-group
                label.control-label(for='comment') Comment:
                .controls
                    textarea#comment(name='comment', rows='3')

    script(type='text/javascript').

        function getDataByUrl(url, params) {
            var result = {};
            $.ajax({
                type: 'GET',
                url: url,
                data: params,
                dataType: 'json',
                async: false,
                success: function (data) {
                    result = data;
                }
            });
            return result;
        };

        function getDataByUrlForSelect2(url, params) {
            var list = [],
                    data = getDataByUrl(url, params);
            if (data.success)
                $.each(data.rows, function (index, el) {
                    list.push({id: el.id, text: el.name});
                });
            return list;
        };

        function select2InputSearch(obj, json, multiple, custom) {
            if (custom)
                $(obj).select2({
                    createSearchChoice: function (term, data) {
                        if ($(data).filter(function () {
                                    return this.text.localeCompare(term) === 0;
                                }).length === 0) {
                            return {id: term, text: term};
                        }
                    },
                    multiple: multiple,
                    data: json.data
                }).select2('data', json.data[json.selected]);
            else
                $(obj).select2({
                    multiple: multiple,
                    data: json.data
                }).select2('data', json.data[json.selected]);
        };

        function select2InputNoSearch(obj, json, multiple, custom) {
            if (custom)
                $(obj).select2({
                    createSearchChoice: function (term, data) {
                        if ($(data).filter(function () {
                                    return this.text.localeCompare(term) === 0;
                                }).length === 0) {
                            return {id: term, text: term};
                        }
                    },
                    multiple: multiple,
                    data: json.data,
                    minimumResultsForSearch: Infinity
                }).select2('data', json.data[json.selected]);
            else
                $(obj).select2({
                    multiple: multiple,
                    data: json.data,
                    minimumResultsForSearch: Infinity
                }).select2('data', json.data[json.selected]);
        };

        function getRandomCode(length) {
            length = length || 16;
            var charset = "abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",
                    retVal = "";
            for (var i = 0, n = charset.length; i < length; ++i)
                retVal += charset.charAt(Math.floor(Math.random() * n));
            return retVal;
        };

        $(document).ready(function() {

            $('a#btnGenerateToken').click(function () {
                $('input#token').val(getRandomCode(32));
            });

            $('input#begin_date').datepicker();
            $('input#end_date').datepicker();

            select2InputNoSearch('input#active', {data: [{id: 1, text: 'Yes'}, {id: 0, text: 'No'}]}, false, false);
            select2InputSearch('input#user_id', {data: getDataByUrlForSelect2('/data/tokens_manager/listAllUsers')}, false, false);

            var dataToken = getDataByUrl('/data/tokens_manager/getToken', {id: $('input#id').val()});
            if (dataToken.success) {
                $('input#user_id').select2('val', dataToken.rows[0].user_id);
                $('input#active').select2('val', dataToken.rows[0].active);

                $('input#token').val(dataToken.rows[0].token);

                $('input#begin_date').attr('data-date', dataToken.rows[0].begin_date);
                $('input#begin_date').val(dataToken.rows[0].begin_date);

                $('input#end_date').attr('data-date', dataToken.rows[0].end_date);
                $('input#end_date').val(dataToken.rows[0].end_date);

                $('textarea#comment').val(dataToken.rows[0].comment);
            } else {
                $('input#active').select2('val', 1);
            }
        });
