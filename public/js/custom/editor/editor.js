var contexts_id = [];

$(document).ready(function(){
    $.ajax({
        type: 'GET',
        url: '/data/editor/list_configs',
        dataType: 'json',
        async: false,
        success: function(data) {
            if(data.success) {
                var main_tabs_li = '';
                var main_tabs_content = '';

                $.each(data.configs, function(index, el) {
                    main_tabs_li = '<li><a href="#tab_'+index+'" data-toggle="tab" tab-number="' + index + '">' + el + '</a></li>';
                    main_tabs_content = '<div class="tab-pane" id="tab_' + index + '"></div>';
                    $('#main-tabs').append(main_tabs_li);
                    $('#main-tabs-content').append(main_tabs_content);
                });

                $('#main-tabs a[href*="#tab"]').click(function() {
                    var tab_number = $(this).attr('tab-number');
                    if(!$('#tab_' + tab_number + ' div').hasClass('tabbable'))
                        loadPageConfigs(tab_number);
                });

                //active 0 tab by default
                $('a[href="#tab_0"]').click();
            }
        }
    });
});

function loadConfig(editor_id, config_name, node_name) {
    $.ajax({
        type: 'POST',
        url: '/data/editor/get_config',
        data: {config_name: config_name},
        dataType: 'json',
        async: false,
        success: function(data) {
            if(data.success) {
                var editor = ace.edit(editor_id);
                editor.getSession().setValue(data.content[node_name].replace(/same/g, '  same'));
                editor.clearSelection();
                editor.gotoLine(1);
            }
        }
    });
}

function loadPageConfigs(num) {

    var tab_name = $('a[tab-number=' + num + ']').html();
    var JavaScriptMode = require("ace/mode/ini").Mode;

    $.ajax({
        type: 'POST',
        url: '/data/editor/get_config',
        data: {config_name: tab_name},
        dataType: 'json',
        async: false,
        success: function(data) {
            if(data.success) {
                var tabs            = '',
                    content         = '',
                    buttons         = '',
                    btn_refresh     = '',
                    btn_save        = '',
                    node_name       = '',
                    value_editor    = '',
                    nodes           = ['ALL'];

                //get nodes
                $.ajax({
                    type: 'GET',
                    url: '/data/exec/get_serverList',
                    data: {type: 'short'},
                    dataType: 'json',
                    async: false,
                    success: function(result) {
                        if(result.success) {
                            $.each(result.rows, function(index, el) {
                                nodes.push(el.name);
                            });
                        }
                    }
                });

                //40px - height servers tabs
                var editor_height = $('#content').height() - $('#content-header').height() - $('#breadcrumb').height() - $('#main-tabs').height() - 40;

                $.each(nodes, function(index, el) {
                    tabs    += '<li><a data-toggle="tab" href="#editor_' + num + '_' + el + '">' + el + '</a></li>';
                    content += '<div class="tab-pane" node-name="' + el + '" config-name="' + tab_name + '" id="editor_' + num + '_' + el +'" style="margin-top:10px; height: ' + editor_height + 'px;"></div>';
                });

                tabs        = '<ul class="nav nav-tabs">' + tabs + '</ul>';
                content     = '<div class="tab-content">' + content + '</div>';
                buttons = '<button data-action="refresh" class="btn btn-mini btn-primary"><i class="icon-refresh icon-white"></i> Refresh</button>&nbsp;'
                switch(tab_name) {
                    case 'extensions-autogenerated.conf':
                    case 'extensions.conf':
                    case 'sip.conf':
                    case 'ooh323.conf':
                    case 'iax.conf':
                    break;
                    default:
                        buttons += '<button data-action="save" class="btn btn-mini btn-success"><i class="icon-ok icon-white"></i> Save</button>';
                }

                $('#tab_' + num).html('<div class="tabbable tabs-nav">' + tabs + buttons + content + '</div>');
                $('a[href="#editor_' + num + '_ALL' + '"]').click();

                var editors = $('div[id*="editor_' + num + '_"]');
                $.each(editors, function(index, el) {
                    var editor = ace.edit(el);
                    editor.setTheme("ace/theme/tomorrow_night_bright");
                    editor.getSession().setMode(new JavaScriptMode());

                    node_name = $(el).attr('node-name');

                    if(data.content[node_name]) {
                        value_editor = data.content[node_name].replace(/same/g, '  same');
                        editor.setValue(value_editor);
                    }

                    editor.clearSelection();
                    editor.gotoLine(1);
                });

                $('button[data-action="refresh"]')
                    .unbind('click')
                    .bind('click', function() {
                        var current_container   = $(this).siblings('.tab-content').find('div[id*="editor_"]:visible');
                        var current_config_name = $(current_container[0]).attr('config-name');
                        var current_node_name   = $(current_container[0]).attr('node-name');
                        var editor_id           = $(current_container[0]).attr('id');
                        loadConfig(editor_id, current_config_name, current_node_name);
                    });

                $('button[data-action="save"]')
                    .unbind('click')
                    .bind('click', function() {
                        //find visible content
                        var deleted             = 0;
                        var current_container   = $(this).siblings('.tab-content').find('div[id*="editor_"]:visible');
                        var current_config_name = $(current_container[0]).attr('config-name');
                        var current_node_name   = $(current_container[0]).attr('node-name');
                        var editor_id           = $(current_container[0]).attr('id');
                        var current_editor      = ace.edit(current_container[0]);

                        if(tab_name == 'extensions-custom.conf') {
                            var current_containers      = $(this).siblings('.tab-content').find('div[id*="editor_"]');
                            var content_all_servers     = '';
                            $.each(current_containers, function(index, el) {
                                content_all_servers += ace.edit(el).getSession().getValue();
                            });

                            deleted = getDeletedContexts(content_all_servers);
                        }

                        $.ajax({
                            type: 'POST',
                            url: '/data/editor/save_config',
                            data: {
                                //config_content: prep_data2db(current_config_name, current_editor, current_node_name),
                                data: prep_data2db(current_config_name, current_editor, current_node_name),
                                config_name: current_config_name,
                                deleted: deleted,
                                node: current_node_name
                            },
                            dataType: 'json',
                            async: false,
                            success: function(data) {
                                if(data.success) {
                                    loadConfig(editor_id, current_config_name, current_node_name);
                                }
                                showDialog('Editor',data.message, 300, 'auto');
                                changeBtnApply(1);
                            }
                        });


                    });

            }
        }
    });
}

function getDeletedContexts(editor) {
    //var content             = editor.getValue().split('\n');
    var content             = editor.split('\n');
    var context_regex       = /^\[(.+)\]$/;

    //копирование по значению
    var contexts_id_deleted = contexts_id.slice(0);

    content.forEach(function(row) {
        var matched_context = row.match(context_regex);
        if(matched_context) {
            for(i=0; i<contexts_id_deleted.length; i++) {
                if(contexts_id_deleted[i].name == matched_context[1])
                    contexts_id_deleted.splice(i, 1);
            }
        }
    });

    var deleted = [];
    if(contexts_id_deleted.length > 0) {
        contexts_id_deleted.forEach(function(row) {
            deleted.push(row.id);
        });
    }

    return deleted.join();
}

function prep_data2db(config, editor, node) {
  var data            = editor.getValue().split('\n');
  var context_regex   = /^\[(.+)\]$/;
  var good_row_regex  = /^\s*(\w+)\s*(?:=>|=)\s*(.+)$/;
  var lastContext     = '';
  var item            = {};
  
  config = config.replace('-custom', '');
  
  item.name = config;
  item.node = node;
  item.rows = [];

  data.forEach(function(row) {
    row = $.trim(row);
    var matched_context            = row.match(context_regex);
    var matched_good_row_regex    = row.match(good_row_regex);
    var itemRow = {};
    
    if (matched_good_row_regex) {
      itemRow.category  = lastContext;
      itemRow.var_name  = matched_good_row_regex[1];
      itemRow.var_val   = matched_good_row_regex[2];

      item.rows.push(itemRow);
    } else {
      if (matched_context)
        lastContext = matched_context[1];
    }
  });

  //console.log(item);
  return item;
}